=== ✨ عفريت جت
// === Git Daemon

[NOTE]
====
(من المترجم) كلمة "`daemon`" ظهرت في MIT اسمًا للعمليات الخدمية التي تعمل في خلفية نظام التشغيل ولا يلاحظها المستخدم. جاءت التسمية نسبة إلى https://ar.wikipedia.org/wiki/عفريت_ماكسويل[«عفريت ماكسويل»]، والمتسق مع المعنى الإغريقي القديم وهو الكائن الغَيْبي الذي يعمل في الخفاء. أترجمها هنا «عفريت». وأترجم فعل الصيرورة منه "`daemonize`" إلى «عفرتة». الاسم المناظر على ويندوز هو «خدمة» ("`service`") والذي بدأ استخدامه حديثا في لينكس كذلك.
====

(((serving repositories, git protocol)))
سنعدّ الآن عفريتا ليقدِّم المستودعات بميفاق "`Git`".
// Next we'll set up a daemon serving repositories using the "`Git`" protocol.
هذا هو الخيار الشائع لإتاحة وصول سريع بغير استيثاق لبيانات جت.
// This is a common choice for fast, unauthenticated access to your Git data.
تذكر أنه غير مستوثَق، مما يعني أن أي شيء تتيحه عبر هذا الميفاق سيكون عموميا للجميع داخل الشبكة.
// Remember that since this is not an authenticated service, anything you serve over this protocol is public within its network.

فإذا كنت تستخدمه على خادوم خارج جدارك الناري، فعليك ألا تستخدمه إلا للمشروعات التي يمكن أن يراها العالم.
// If you're running this on a server outside your firewall, it should be used only for projects that are publicly visible to the world.
وإذا كان خادومك داخل جدارك الناري، فيمكنك استخدامه للمشروعات التي يحتاج الكثيرون من الأشخاص أو الأجهزة الوصولَ إليه وصول قراءة فقط (مثل خواديم البناء أو التكامل المستمر)، إن لم تكن تريد إضافة مفتاح SSH لكلٍ منهم.
// If the server you're running it on is inside your firewall, you might use it for projects that a large number of people or computers (continuous integration or build servers) have read-only access to, when you don't want to have to add an SSH key for each.

وفي جميع الأحوال، إن ميفاق Git سهل الإعداد نسبيا.
// In any case, the Git protocol is relatively easy to set up.
فلستَ تحتاج إلا إلى جعله عفريتًا:(((git commands, daemon)))
// Basically, you need to run this command in a daemonized manner:(((git commands, daemon)))

[source,console]
----
$ git daemon --reuseaddr --base-path=/srv/git/ /srv/git/
----

خيار `--reuseaddr` («أعد استخدام العنوان») يسمح بإعادة تشغيل الخادوم بغير انتظار انتهاء وقت (timeout) الاتصالات القديمة. وخيار `--base-path` («أساس المسار») يتيح للناس استنساخ المشروعات بغير تحديد المسار بكامله. أما المسار الذي في آخر الأمر يخبر عفريت جت مكان المستودعات التي سيُصدِّرها.
// The `--reuseaddr` option allows the server to restart without waiting for old connections to time out, while the `--base-path` option allows people to clone projects without specifying the entire path, and the path at the end tells the Git daemon where to look for repositories to export.
وإذا كنت تستخدم جدارا ناريا، فستحتاج أيضا إلى فتح منفذ 9418 فيه على الجهاز الذي تعدّه عليه.
// If you're running a firewall, you'll also need to punch a hole in it at port 9418 on the box you're setting this up on.

طريقة عفرتة هذه العملية تختلف حسب نظام تشغيلك.
// You can daemonize this process a number of ways, depending on the operating system you're running.

لأن `systemd` هو نظام الابتداء (init) الأكثر شيوعا على توزيعات لينكس الحديثة، فيمكنك استخدامه لهذا الغرض.
// Since `systemd` is the most common init system among modern Linux distributions, you can use it for that purpose.
ليس عليك سوى وضع ملف في `/etc/systemd/system/git-daemon.service` بهذه المحتويات:
// Simply place a file in `/etc/systemd/system/git-daemon.service` with these contents:

[source,console]
----
[Unit]
Description=Start Git Daemon

[Service]
ExecStart=/usr/bin/git daemon --reuseaddr --base-path=/srv/git/ /srv/git/

Restart=always
RestartSec=500ms

StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=git-daemon

User=git
Group=git

[Install]
WantedBy=multi-user.target
----

ربما لاحظت أن اسم المستخدم واسم المجموعة اللذين يشتغل تحتهما عفريت جت هما `git`. FIXME
// You might have noticed that Git daemon is started here with `git` as both group and user.
يمكنك تغييرهما بما يناسبك، ولكن تأكد من وجود اسم المستخدم المختار على نظامك.
// Modify it to fit your needs and make sure the provided user exists on the system.
وتأكد أيضا من أن الملف التنفيذي لبرنامج جت موجود فعلا في المسار `/usr/bin/git` وإلا فغيّره إلى ما يناسب.
// Also, check that the Git binary is indeed located at `/usr/bin/git` and change the path if necessary.

وأخيرا، نفّذ `systemctl enable git-daemon` لبَدء تشغيل الخدمة (العفريت) آليًّا مع بدء تشغيل النظام، ويمكنك تشغيل وإيقاف الخدمة بالأمرين `systemctl start git-daemon` و `systemctl stop git-daemon` على الترتيب.
// Finally, you'll run `systemctl enable git-daemon` to automatically start the service on boot, and can start and stop the service with, respectively, `systemctl start git-daemon` and `systemctl stop git-daemon`.

على الأنظمة الأخرى، قد تود استخدام `xinetd` أو بُرَيمج في نظام `sysvinit` أو شيئًا آخر -- طالما أنك جعلت هذا الأمر مُعَفرَت ومُراقَب بطريقةٍ ما. FIXME
// On other systems, you may want to use `xinetd`, a script in your `sysvinit` system, or something else -- as long as you get that command daemonized and watched somehow.

ثم تحتاج إلى إخبار جت بأي المستودعات التي يسمح بالوصول إليها بغير استيثاق عبر خادوم جت.
// Next, you have to tell Git which repositories to allow unauthenticated Git server-based access to.
يمكنك فعل هذا بإنشاء ملف اسمه `git-daemon-export-ok` في كل مستودع.
// You can do this in each repository by creating a file named `git-daemon-export-ok`.

[source,console]
----
$ cd /path/to/project.git
$ touch git-daemon-export-ok
----

وجود هذا الملف يخبر جت بالموافقة على إتاحة هذا المشروع بغير استيثاق.
// The presence of that file tells Git that it's OK to serve this project without authentication.
