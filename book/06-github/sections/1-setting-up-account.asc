=== ⏳ إعداد الحساب وتهيئته
// === Account Setup and Configuration

(((GitHub, user accounts)))
أول شيء تحتاجه هو إعداد حساب مستخدم مجاني.
// The first thing you need to do is set up a free user account.
عليك فقط زيارة https://github.com[^] واختيار اسم مستخدم متاح وإعطاء عنوان بريد إلكتروني وكلمة مرور، ثم الضغط على الزر الأخضر الكبير "`Sign up for GitHub`".
// Simply visit https://github.com[^], choose a user name that isn't already taken, provide an email address and a password, and click the big green "`Sign up for GitHub`" button.

.استمارة التسجيل في جت‌هب
// .The GitHub sign-up form
image::images/signup.png[استمارة التسجيل في جت‌هب]
// image::images/signup.png[The GitHub sign-up form]

ثاني شيء ستراه هو صفحة أسعار الاشتراكات غير المجانية، ولكن يمكنك تجاهلها الآن.
// The next thing you'll see is the pricing page for upgraded plans, but it's safe to ignore this for now.
سيرسل لك جت‌هب رسالة لتحقق عنوان البريد الإلكتروني الذي أدخلته.
// GitHub will send you an email to verify the address you provided.
اذهب إلى بريدك وأكّده؛ هذا مهم (كما سنرى فيما بعد).
// Go ahead and do this; it's pretty important (as we'll see later).

[NOTE]
====
يتيح جت‌هب أكثر ميزاته للحسابات المجانية، باستثناء بعض الخصائص المتقدمة.
// GitHub provides almost all of its functionality with free accounts, except some advanced features.

فتشمل اشتراكاته المدفوعة أدوات متقدمة وخصائص إضافةً إلى تقليل قيود الخدمات المجانية، ولكن لن نتناول تلك الأمور في هذا الك‍تاب.
// GitHub's paid plans include advanced tools and features as well as increased limits for free services, but we won't be covering those in this book.
للمزيد من المعلومات عن الاشتراكات المتاحة والمقارنة بينها، زُر https://github.com/pricing[^].
// To get more information about available plans and their comparison, visit https://github.com/pricing[^].
====

ستجد في أعلى يسار الشاشة رمز القط ذي الثمانية أرجل (والمسمى "`Octocat`" -- «أخطوقط»)، اضغط عليه لتنتقل إلى صفحتك الرئيسية.
// Clicking the Octocat logo at the top-left of the screen will take you to your dashboard page.
مبارك عليك! أنت الآن مستعد لاستخدام جت‌هب.
// You're now ready to use GitHub.

==== وصول SSH
// ==== SSH Access

(((SSH keys, with GitHub)))
تستطيع الآن التواصل مع مستودعات جت بميفاق `https://` والاستيثاق باسم المستخدم وكلمة المرور اللذين أعددتهما للتو.
// As of right now, you're fully able to connect with Git repositories using the `https://` protocol, authenticating with the username and password you just set up.
لكن لمجرد استنساخ المستودعات العمومية، لا تحتاج حتى للتسجيل في الموقع. إنما سينفعنا الحساب الذي قد أنشأناه فيما بعد عندما نشتق مستودعاتٍ وندفع إلى اشتقاقاتنا.
// However, to simply clone public projects, you don't even need to sign up - the account we just created comes into play when we fork projects and push to our forks a bit later.

إذا احتجت استخدام خواديم بعيدة عبر SSH، فإنك تحتاج إعداد مفتاح عمومي.
// If you'd like to use SSH remotes, you'll need to configure a public key.
إذا لم يكن لديك واحدًا بالفعل، فانظر <<ch04-git-on-the-server#_generate_ssh_key>>.
// If you don't already have one, see <<ch04-git-on-the-server#_generate_ssh_key>>.
افتح إعدادات حسابك بالضغط على الرابط الذي في أعلى يمين الشاشة.
// Open up your account settings using the link at the top-right of the window:

.رابط إعدادات الحساب
// .The "`Account settings`" link
image::images/account-settings.png[رابط إعدادات الحساب]
// image::images/account-settings.png[The “Account settings” link]

ثم اختر تبويب "`SSH keys`" من القائمة اليمنى.
// Then select the "`SSH keys`" section along the left-hand side.

.رابط مفاتيح SSH
// .The "`SSH keys`" link
image::images/ssh-keys.png[رابط مفاتيح SSH]
// image::images/ssh-keys.png[The “SSH keys” link]

From there, click the "`Add an SSH key`" button, give your key a name, paste the contents of your `~/.ssh/id_rsa.pub` (or whatever you named it) public-key file into the text area, and click "`Add key`".

[NOTE]
====
اختر لمفتاحك اسما تتذكره.
// Be sure to name your SSH key something you can remember.
مثلا «حاسوبي المحمول» أو «حساب العمل». أعطِ لكل مفتاحٍ اسما واضحا حتى إذا أردت إبطال أحدها تعرف أيهم تريد.
// You can name each of your keys (e.g. "My Laptop" or "Work Account") so that if you need to revoke a key later, you can easily tell which one you're looking for.
====

[[_personal_avatar]]
==== صورتك الشخصية
// ==== Your Avatar

الخطوة التالية، إن أردت، هي تغيير الصورة المولدة إلى صورة من اختيارك.
// Next, if you wish, you can replace the avatar that is generated for you with an image of your choosing.
اذهب إلى تبويب "`Profile`" (فوق تبويب "`SSH Keys`") واضغط على "`Upload new picture`".
// First go to the "`Profile`" tab (above the SSH Keys tab) and click "`Upload new picture`".

.The "`Profile`" link
image::images/your-profile.png[The “Profile” link]

سنختار صورة شارة جت موجودة لدينا على القرص الصلب، وسيتيح الموقع لنا الفرصة لاقتصاصها.
// We'll choose a copy of the Git logo that is on our hard drive and then we get a chance to crop it.

.اقتصاص صورتك الشخصية التي رفعتها
// .Crop your uploaded avatar
image::images/avatar-crop.png[اقتصاص صورتك الشخصية التي رفعتها]
// image::images/avatar-crop.png[Crop your uploaded avatar]

من الآن سيرى الناس صورتك بجوار اسمك عندما تتفاعل على الموقع.
// Now anywhere you interact on the site, people will see your avatar next to your username.

وإذا كنت قد رفعت صورة لك على خدمة Gravatar الشهيرة (والشائعة مع حسابات WordPress)، فستكون هي الصورة المبدئية ولن تحتاج إلى هذه الخطوة من الأساس.
// If you happen to have uploaded an avatar to the popular Gravatar service (often used for WordPress accounts), that avatar will be used by default and you don't need to do this step.

==== عناوين بريدك الإلكتروني
// ==== Your Email Addresses

The way that GitHub maps your Git commits to your user is by email address.
If you use multiple email addresses in your commits and you want GitHub to link them up properly, you need to add all the email addresses you have used to the Emails section of the admin section.

[[_add_email_addresses]]
.Add all your email addresses
image::images/email-settings.png[Add all your email addresses]

In <<_add_email_addresses>> we can see some of the different states that are possible.
The top address is verified and set as the primary address, meaning that is where you'll get any notifications and receipts.
The second address is verified and so can be set as the primary if you wish to switch them.
The final address is unverified, meaning that you can't make it your primary address.
If GitHub sees any of these in commit messages in any repository on the site, it will be linked to your user now.

==== الاستيثاق الثنائي
// ==== Two Factor Authentication

وأخيرا، للمزيد من الأمان، عليك بالتأكيد إعداد «الاستيثاق الثنائي» أو «المصادقة الثنائية» أو «التحقق بخطوتين» (Two-factor Authentication أو "`2FA`" اختصارًا).
// Finally, for extra security, you should definitely set up Two-factor Authentication or "`2FA`".
وهي طريقة استيثاق بدأت بالانتشار حديثًا لتقليل خطر اختراق حسابك إن سُرقت كلمة مرورك بطريقةٍ ما.
// Two-factor Authentication is an authentication mechanism that is becoming more and more popular recently to mitigate the risk of your account being compromised if your password is stolen somehow.
وتفعيلها يجعل جت‌هب يسألك عن طريقتين مختلفتين للاستيثاق، لكيلا يتعرض حسابك للاختراق إن سُرقت إحداهما.
// Turning it on will make GitHub ask you for two different methods of authentication, so that if one of them is compromised, an attacker will not be able to access your account.

يمكنك إعداد الاستيثاق الثنائي من تبويب "`Security`" في صفحة إعدادات حسابك.
// You can find the Two-factor Authentication setup under the Security tab of your Account settings.

.الاستيثاق الثنائي في تبويب الأمان
// .2FA in the Security Tab
image::images/2fa-1.png[الاستيثاق الثنائي في تبويب الأمان]
// image::images/2fa-1.png[2FA in the Security Tab]

If you click on the "`Set up two-factor authentication`" button, it will take you to a configuration page where you can choose to use a phone app to generate your secondary code (a "`time based one-time password`"), or you can have GitHub send you a code via SMS each time you need to log in.

After you choose which method you prefer and follow the instructions for setting up 2FA, your account will then be a little more secure and you will have to provide a code in addition to your password whenever you log into GitHub.
